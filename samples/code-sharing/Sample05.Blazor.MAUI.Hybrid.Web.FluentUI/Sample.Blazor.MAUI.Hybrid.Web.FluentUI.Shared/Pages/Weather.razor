@page "/weather"

@inject IDialogService dialogService
@inject NavigationManager navigationManager
@*
@inject WeatherRepository repository
*@

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates showing data.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <FluentDataGrid Items="@forecasts">
        <PropertyColumn Property="@(f => f.Date)" Sortable="true" Format="yyyy-MM-dd" />
        <PropertyColumn Property="@(f => f.TemperatureC)" Sortable="true" />
        <PropertyColumn Property="@(f => f.Summary)" Sortable="true" />
    </FluentDataGrid>
    }

@code 
{
    private IQueryable<WeatherForecast>? forecasts;

    protected override async Task OnInitializedAsync()
    {
        // Simulate asynchronous loading to demonstrate a loading indicator
        var startDate = DateOnly.FromDateTime(DateTime.Now);
        var summaries = new[] { "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching" };
        forecasts = Enumerable.Range(1, 5)
                                .Select
                                    (
                                        index => new WeatherForecast
                                                            {
                                                                Date = startDate.AddDays(index),
                                                                TemperatureC = Random.Shared.Next(-20, 55),
                                                                Summary = summaries[Random.Shared.Next(summaries.Length)]
                                                            }
                                    )
                                    //.ToArray()
                                    .AsQueryable()
                                    ;
    }

    private class WeatherForecast
    {
        public DateOnly Date { get; set; }
        public int TemperatureC { get; set; }
        public string? Summary { get; set; }
        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
